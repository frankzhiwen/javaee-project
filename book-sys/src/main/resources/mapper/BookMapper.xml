<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="org.example.model.Book"
      extends="org.example.mapper.DictionaryTagMapper.BaseResultMap">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="price" jdbcType="DECIMAL" property="price" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, book_name, author, price, create_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="org.example.model.Book" useGeneratedKeys="true">
    insert into book (book_name, author, price, 
      create_time)
    values (#{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="org.example.model.Book" useGeneratedKeys="true">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookName != null">
        book_name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.model.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.model.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOne" parameterType="org.example.model.Book" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    <where>
      <if test="bookName != null">
        and book_name = #{bookName,jdbcType=VARCHAR}
      </if>
      <if test="author != null">
        and author = #{author,jdbcType=VARCHAR}
      </if>
      <if test="price != null">
        and price = #{price,jdbcType=DECIMAL}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, book_name, author, price, create_time
    from book
  </select>
  <select id="selectByCondition" parameterType="org.example.model.Book" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    <where>
      <if test="bookName != null">
        and book_name = #{bookName,jdbcType=VARCHAR}
      </if>
      <if test="author != null">
        and author = #{author,jdbcType=VARCHAR}
      </if>
      <if test="price != null">
        and price = #{price,jdbcType=DECIMAL}
      </if>
      <if test="createTime != null">
        and create_time = #{createTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </select>
  <delete id="deleteByIds" parameterType="java.util.List">
    delete from book
      where id in
    <foreach close=")" collection="list" item="item" open="(" separator=",">
      #{item}
    </foreach>
  </delete>




  <!-- 自定义SQL -->
  <select id="queryAsDict" resultMap="BaseResultMap">
    select
        id dictionary_tag_key,
        book_name dictionary_tag_value,
        author,
        price
    from book
  </select>
</mapper>